@using Eventflow.Application.Services.Interfaces
@using Eventflow.Domain.Models.ViewModels
@using Eventflow.Domain.Models.Models

@{
    Layout = null;

    var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString();

    var isCreateEvent = currentController == "Event" && currentAction == "Create";
    var isEditEvent = currentController == "Event" && currentAction == "Edit";
    var isMyEvents = currentController == "Event" && currentAction == "MyEvents";
    var isInvites = currentController == "Invite" && currentAction == "Index";
    var isReminders = currentController == "Reminder" && currentAction == "Index";
    var isMessages = currentController == "Messages" && currentAction == "Index";

    string sidebarContext = "Calendar";

    if (isCreateEvent) {
        sidebarContext = "Create";
    }
    else if (isMyEvents) {
        sidebarContext = "MyEvents";
    }
    else if (isEditEvent) {
        sidebarContext = "Edit";
    }
    else if (isInvites)
    {
        sidebarContext = "Invite";
    }
    else if (isReminders)
    {
        sidebarContext = "Reminder";
    }
    else if (isMessages) {
        sidebarContext = "Messages";
    }

    var pageModel = Model as CalendarPageViewModel;
    var continents = pageModel?.Continents ?? new List<Continent>();

    var noVerticalCenterPage = new[] { "Invite", "Reminder", "Messages" };
    var needsVerticalCentering = !noVerticalCenterPage.Contains(currentController);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@((ViewData["Title"] ?? "Eventflow"))</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/event_toggle.css" rel="stylesheet" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/event_modal.css" />
    <link rel="stylesheet" href="~/css/reminder_invite_modal.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-light">

    <div class="container-fluid">
        <div class="row min-vh-100">
            <div class="col-md-3 bg-white shadow-sm p-4 d-flex flex-column justify-content-between">
                @await Component.InvokeAsync("Sidebar", new {
                    context = sidebarContext,
                    continents = continents
                })
                
            </div>

            <div class="col-md-9 p-4 @(needsVerticalCentering ? "d-flex justify-content-center align-items-center min-vh-100" : "")">
                @RenderBody()
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    @RenderSection("Scripts", required: false)
</body>
</html>
