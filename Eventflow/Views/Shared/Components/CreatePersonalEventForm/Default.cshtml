@using Eventflow.Domain.Models.Common
@using Eventflow.Domain.Models.Entities
@using Eventflow.ViewModels;
@using Eventflow.ViewModels.Category
@using Eventflow.ViewModels.PersonalEvent.Component
@using Eventflow.ViewModels.PersonalEvent.Form
@using Eventflow.ViewModels.Shared
@model CreatePersonalEventViewModel

@{
    var controller = ViewContext.RouteData.Values["controller"]?.ToString() ?? "";
    var action = ViewContext.RouteData.Values["action"]?.ToString() ?? "";

    var isGlobalCreate = controller == "Admin" && action == "CreateGlobalEvent";
    var formAction = isGlobalCreate ? "CreateGlobalEvent" : (Model.Id.HasValue ? "Edit" : "Create");
}

<form asp-action="@formAction" asp-controller="@controller" method="post">
    @Html.AntiForgeryToken()

    @await Component.InvokeAsync("FormInput", new FormInputModel
    {
        Label = "Title",
        Name = nameof(Model.Title),
        Type = "text",
        Placeholder = "Enter event title",
        Value = Model.Title
    })

    @await Component.InvokeAsync("CreatePersonalEventTextarea", new CreatePersonalEventTextareaModel
    {
        Label = "Description",
        Name = nameof(Model.Description),
        Placeholder = "Enter description*",
        Value = Model.Description
    })

    @await Component.InvokeAsync("FormInput", new FormInputModel
    {
        Label = "Date",
        Name = nameof(Model.Date),
        Type = "date",
        Value = Model.Date.ToString("yyyy-MM-dd")
    })

    @await Component.InvokeAsync("Dropdown", new DropdownViewModel
    {
        Label = "Category",
        Name = nameof(Model.CategoryId),
        DefaultOptionLabel = "Select",        
        SelectedValue = Model.CategoryId?.ToString(),
        Options = (Model.Categories ?? new List<CategoryViewModel>())
                .Select(c => new DropdownOptionViewModel {
                    Id = c.Id.ToString(),
                    Name = c.Name
                })
                .ToList()
    })

    <button type="submit" class="btn btn-success w-100 mt-4">
        @(Model.Id.HasValue ? "Save" : "Create")
    </button>
</form>