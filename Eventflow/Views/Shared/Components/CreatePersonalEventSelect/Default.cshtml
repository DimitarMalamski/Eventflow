@using Eventflow.Domain.Models.ViewModels
@model CreatePersonalEventSelectModel

@{
    var name = Model?.Name ?? "";
    var selectedValue = Model?.SelectedValue?.ToString() ?? "";

    var error = "";
    bool showError = false;

    if (string.IsNullOrEmpty(selectedValue) && !string.IsNullOrEmpty(name) && ViewContext.ViewData.Model != null)
    {
        selectedValue = ViewContext.ViewData.Model.GetType()
            .GetProperty(name)?
            .GetValue(ViewContext.ViewData.Model)?
            .ToString() ?? "";
    }

    if (!string.IsNullOrEmpty(name) && ViewContext.ViewData.ModelState.TryGetValue(name, out var state))
    {
        showError = state.Errors.Any() && state.RawValue != null;
        error = showError ? state.Errors.First().ErrorMessage : "";
    }
}

<div class="mb-3">
    <label for="@name" class="form-label">@Model!.Label</label>
    <select id="@name"
    name="@name"
    class="form-select @(showError ? "is-invalid" : "")">
        <option value="">@Model.CategoryOptionLabel</option>
        @foreach (var category in Model.CategoryOptions)
        {
            <option value="@category.Id" selected="@(category.Id.ToString() == selectedValue)">
                @category.Name
            </option>
        }
    </select>

    @if (showError)
    {
        <span class="text-danger">@error</span>
    }
</div>
